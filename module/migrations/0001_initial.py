# Generated by Django 5.2.1 on 2025-08-20 15:20

import django.db.models.deletion
import module.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('program', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('description', models.TextField(blank=True)),
                ('prerequisites', models.TextField(blank=True)),
                ('tools_software', models.JSONField(blank=True, default=list)),
                ('is_standalone', models.BooleanField(default=False, help_text='Can be taken without full program enrollment')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ModuleLevelLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='program.programlevel')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='module.module')),
            ],
            options={
                'ordering': ['level', 'order'],
                'unique_together': {('module', 'level')},
            },
        ),
        migrations.AddField(
            model_name='module',
            name='levels',
            field=models.ManyToManyField(help_text='Program levels this module belongs to', related_name='modules', through='module.ModuleLevelLink', to='program.programlevel'),
        ),
        migrations.CreateModel(
            name='ModuleMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=160)),
                ('description', models.TextField(blank=True)),
                ('audience', models.CharField(choices=[('FREE', 'Free Users'), ('ENROLLED', 'Enrolled Students'), ('BOTH', 'Both')], default='ENROLLED', max_length=8)),
                ('type', models.CharField(choices=[('PDF', 'PDF'), ('SLIDES', 'Slides'), ('LINK', 'External Link'), ('OTHER', 'Other')], default='PDF', max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to=module.models.module_material_upload_to)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('version', models.CharField(blank=True, help_text='e.g. v1.0 or 2025-08-17', max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='module.module')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='EvaluationComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('QUIZ', 'Quiz'), ('EXAM', 'Exam'), ('PROJECT', 'Project')], max_length=7)),
                ('title', models.CharField(max_length=150)),
                ('is_required', models.BooleanField(default=True, help_text='Is this component mandatory for module completion')),
                ('max_score', models.PositiveIntegerField(default=100, help_text='Maximum score for this component')),
                ('deadline', models.DateTimeField(blank=True, help_text='Deadline for submission', null=True)),
                ('criteria', models.JSONField(default=dict, help_text='Pass criteria JSON schema')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, help_text='Relative weight of this component for module completion', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='module.module')),
            ],
            options={
                'ordering': ['type', 'title'],
                'indexes': [models.Index(fields=['module', 'type'], name='module_eval_module__b59711_idx')],
            },
        ),
        migrations.CreateModel(
            name='ModuleLecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=50)),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecturers', to='module.module')),
            ],
            options={
                'unique_together': {('module', 'lecturer')},
            },
        ),
        migrations.AddIndex(
            model_name='module',
            index=models.Index(fields=['slug'], name='module_modu_slug_303c2b_idx'),
        ),
        migrations.AddIndex(
            model_name='module',
            index=models.Index(fields=['is_active'], name='module_modu_is_acti_0678d6_idx'),
        ),
        migrations.AddIndex(
            model_name='modulematerial',
            index=models.Index(fields=['module', 'slug'], name='module_modu_module__4cb2e0_idx'),
        ),
        migrations.AddIndex(
            model_name='modulematerial',
            index=models.Index(fields=['module', 'type'], name='module_modu_module__6d0199_idx'),
        ),
        migrations.AddIndex(
            model_name='modulematerial',
            index=models.Index(fields=['module', 'audience'], name='module_modu_module__86535f_idx'),
        ),
        migrations.AddIndex(
            model_name='modulematerial',
            index=models.Index(fields=['is_active'], name='module_modu_is_acti_9132d2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='modulematerial',
            unique_together={('module', 'slug')},
        ),
    ]
