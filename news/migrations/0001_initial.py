# Generated by Django 5.2.1 on 2025-08-28 01:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Optional CSS icon class or emoji', max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('summary', models.CharField(blank=True, help_text='Optional short summary for previews and feeds.', max_length=300)),
                ('content', models.TextField(help_text='Markdown content')),
                ('content_html', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Optional cover image', null=True, upload_to='news/images/')),
                ('tags', models.JSONField(blank=True, help_text='List of relevant keywords or tags', null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('PENDING', 'Pending Approval')], default='DRAFT', max_length=10)),
                ('allow_comments', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.CharField(blank=True, max_length=512)),
                ('published_on', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='news.newscategory')),
            ],
            options={
                'ordering': ['-published_on', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_news_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='news.newscomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='news.newspost')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('LIKE', 'üëç Like'), ('DISLIKE', 'üëé Dislike')], default='LIKE', max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('reacted_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='news.newspost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-reacted_at'],
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='NewsSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(blank=True, help_text="Optional: how they subscribed (e.g., 'on_signup', 'article_view')", max_length=100)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_followers', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='news.newscategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-subscribed_at'],
                'constraints': [models.CheckConstraint(condition=models.Q(('category__isnull', False), ('author__isnull', False), _connector='OR'), name='at_least_one_subscription_target')],
                'unique_together': {('user', 'author'), ('user', 'category')},
            },
        ),
    ]
