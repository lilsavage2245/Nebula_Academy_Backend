# Generated by Django 5.2.1 on 2025-08-28 01:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BloggerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Optional avatar or profile photo', null=True, upload_to='profiles/')),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('tags', models.JSONField(blank=True, help_text='Optional list of keywords for frontend filtering/search', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Admin approval status')),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pen_name', models.CharField(blank=True, help_text='Optional pen name', max_length=100)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'BLOGGER'}, on_delete=django.db.models.deletion.CASCADE, related_name='blogger_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LecturerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Optional avatar or profile photo', null=True, upload_to='profiles/')),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('tags', models.JSONField(blank=True, help_text='Optional list of keywords for frontend filtering/search', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Admin approval status')),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qualifications', models.TextField(blank=True)),
                ('office_hours', models.JSONField(blank=True, help_text='Example: {"Monday": ["10:00-12:00"], "Wednesday": ["14:00-16:00"]}', null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
                ('expertise', models.ManyToManyField(blank=True, help_text='Areas of expertise or teaching subjects', related_name='lecturers', to='people.expertise')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'LECTURER'}, on_delete=django.db.models.deletion.CASCADE, related_name='lecturer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Optional avatar or profile photo', null=True, upload_to='profiles/')),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('tags', models.JSONField(blank=True, help_text='Optional list of keywords for frontend filtering/search', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Admin approval status')),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('partnership_level', models.CharField(blank=True, help_text='e.g. Gold, Silver, Bronze', max_length=50)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'PARTNER'}, on_delete=django.db.models.deletion.CASCADE, related_name='partner_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramDirectorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Optional avatar or profile photo', null=True, upload_to='profiles/')),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('tags', models.JSONField(blank=True, help_text='Optional list of keywords for frontend filtering/search', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Admin approval status')),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('office_hours', models.CharField(blank=True, max_length=100)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'ADMIN'}, on_delete=django.db.models.deletion.CASCADE, related_name='director_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, help_text='Optional avatar or profile photo', null=True, upload_to='profiles/')),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('tags', models.JSONField(blank=True, help_text='Optional list of keywords for frontend filtering/search', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Admin approval status')),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interests', models.JSONField(blank=True, help_text='e.g. ["Event Support", "Mentorship", "Logistics"]', null=True)),
                ('availability', models.JSONField(blank=True, help_text='e.g. {"Weekdays": ["Morning"], "Weekends": ["Afternoon"]}', null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'VOLUNTEER'}, on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OnboardingSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_range', models.CharField(blank=True, choices=[('U18', 'Under 18'), ('18_24', '18–24'), ('25_34', '25–34'), ('35_44', '35–44'), ('45_54', '45–54'), ('55P', '55+')], max_length=8)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('country', models.CharField(blank=True, max_length=64)),
                ('interest_areas', models.JSONField(default=list, help_text="List of interest codes, e.g. ['WEB_DEV','CYBERSEC']")),
                ('motivation_text', models.TextField(blank=True, help_text='User’s statement of motivation/interest')),
                ('referral_source', models.CharField(blank=True, choices=[('FRIEND', 'Friend/Word of Mouth'), ('SOCIAL_IG', 'Instagram'), ('SOCIAL_TIK', 'TikTok'), ('SOCIAL_X', 'X/Twitter'), ('SEARCH', 'Search (Google, etc.)'), ('ADS', 'Online Ads'), ('EVENT', 'Event/Meetup'), ('SCHOOL', 'School/University'), ('OTHER', 'Other')], max_length=20)),
                ('accept_terms', models.BooleanField(default=False)),
                ('terms_version', models.CharField(blank=True, max_length=20)),
                ('terms_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('accept_privacy', models.BooleanField(default=False)),
                ('privacy_version', models.CharField(blank=True, max_length=20)),
                ('privacy_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('email_opt_in', models.BooleanField(default=False)),
                ('info_accuracy_confirmed', models.BooleanField(default=False)),
                ('utm', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_latest', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_latest'], name='people_onbo_user_id_61f954_idx'), models.Index(fields=['referral_source'], name='people_onbo_referra_380636_idx')],
            },
        ),
    ]
