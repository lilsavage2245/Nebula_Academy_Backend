# Generated by Django 5.2.1 on 2025-08-28 01:28

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WeeklyTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='Stable code for rotation/cooldown (e.g. t_time_300).', max_length=64, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('ARTICLE', 'Write and publish an article'), ('LESSON', 'Attend lessons'), ('TIME_SPENT', 'Accumulate learning minutes'), ('QUIZ', 'Complete a quiz'), ('WORKSHEET', 'Submit a worksheet'), ('STREAK', 'Be active on distinct days')], max_length=20)),
                ('audience', models.CharField(choices=[('FREE', 'Free Users'), ('ENROLLED', 'Enrolled Students'), ('BOTH', 'Both')], default='BOTH', max_length=10)),
                ('min_segment', models.CharField(blank=True, choices=[('NEWBIE', 'Newbie'), ('RAMPING', 'Ramping'), ('ENGAGED', 'Engaged')], help_text='Lowest engagement segment this task applies to (optional).', max_length=10, null=True)),
                ('target_count', models.PositiveIntegerField(default=1, help_text='Minutes for TIME_SPENT; count for other types (e.g., lessons=3).')),
                ('cooldown_weeks', models.PositiveSmallIntegerField(default=1, help_text='Minimum weeks before this task can be re-assigned to the same user.')),
                ('required_hours', models.PositiveIntegerField(default=0, help_text='Legacy: hours for TIME_SPENT. Prefer target_count (minutes).')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyTaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start', models.DateField(db_index=True)),
                ('week_end', models.DateField(db_index=True)),
                ('target', models.PositiveIntegerField(default=1, help_text='Minutes for TIME_SPENT; count for other types.')),
                ('current', models.PositiveIntegerField(default=0, help_text='Computed during evaluation (minutes or count).')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('progress', models.JSONField(blank=True, default=dict)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='badgetasks.weeklytask')),
            ],
            options={
                'ordering': ['-week_start', '-updated_at'],
            },
        ),
    ]
