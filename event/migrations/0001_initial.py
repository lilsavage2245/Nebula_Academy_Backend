# Generated by Django 5.2.1 on 2025-08-28 01:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Event Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='speakers/')),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('WEBINAR', 'Webinar'), ('WORKSHOP', 'Workshop'), ('CAMPAIGN', 'Campaign'), ('MEETUP', 'Meetup'), ('OTHER', 'Other')], default='OTHER', max_length=15)),
                ('target_group', models.CharField(choices=[('PUBLIC', 'Public'), ('FREE', 'Free Users Only'), ('ENROLLED', 'Enrolled Students Only'), ('ALL', 'All Users')], default='ALL', max_length=20)),
                ('audience_description', models.CharField(blank=True, help_text="Optional explanation of who this event is for, e.g., 'Parents of Pre-Academy students aged 10â€“13'.", max_length=255)),
                ('format', models.CharField(choices=[('ONLINE', 'Online'), ('IN_PERSON', 'In Person'), ('HYBRID', 'Hybrid')], default='ONLINE', max_length=10)),
                ('status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='UPCOMING', max_length=15)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('event_link', models.URLField(blank=True)),
                ('venue', models.CharField(blank=True, max_length=255)),
                ('tags', models.JSONField(blank=True, help_text='List of tags for filtering and search', null=True)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='events/banners/')),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='events/files/')),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('published_on', models.DateTimeField(blank=True, null=True)),
                ('is_registration_required', models.BooleanField(default=True)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.CharField(blank=True, max_length=512)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizers', models.ManyToManyField(blank=True, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='event.eventcategory')),
            ],
            options={
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('NON_BINARY', 'Non-binary'), ('TRANSGENDER', 'Transgender'), ('INTERSEX', 'Intersex'), ('PREFER_NOT_TO_SAY', 'Prefer not to say'), ('OTHER', 'Other')], max_length=20)),
                ('gender_other', models.CharField(blank=True, max_length=100)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('affiliation', models.CharField(blank=True, choices=[('STUDENT', 'Student'), ('PARENT', 'Parent / Guardian'), ('SCHOOL', 'School'), ('COMPANY', 'Company / Employer'), ('OTHER', 'Other')], max_length=20)),
                ('affiliation_other', models.CharField(blank=True, max_length=150)),
                ('reason_for_attending', models.CharField(blank=True, choices=[('LEARN', 'To Learn New Skills'), ('CAREER', 'Career Exploration'), ('NETWORK', 'Networking'), ('SUPPORT', 'Supporting Someone (Child/Friend)'), ('OTHER', 'Other')], max_length=20)),
                ('reason_other', models.CharField(blank=True, max_length=150)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('attended', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='event.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-registered_at'],
                'indexes': [models.Index(fields=['event', 'registered_at'], name='event_event_event_i_f46da3_idx'), models.Index(fields=['status'], name='event_event_status_98d93e_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('event', 'user'), name='uniq_event_user_registration'), models.UniqueConstraint(condition=models.Q(('email__isnull', False)), fields=('event', 'email'), name='uniq_event_email_registration')],
            },
        ),
        migrations.CreateModel(
            name='EventSpeaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speaker_type', models.CharField(choices=[('USER', 'Platform User'), ('GUEST', 'Guest Speaker')], default='GUEST', max_length=10)),
                ('role', models.CharField(blank=True, help_text='e.g., Keynote, Panelist', max_length=255)),
                ('speaker_order', models.PositiveIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_speakers', to='event.event')),
                ('user', models.ForeignKey(blank=True, help_text='Used if the speaker is a platform user', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('guest', models.ForeignKey(blank=True, help_text='Used if the speaker is an external guest', null=True, on_delete=django.db.models.deletion.SET_NULL, to='event.speaker')),
            ],
            options={
                'ordering': ['speaker_order'],
                'constraints': [models.UniqueConstraint(fields=('event', 'user', 'guest'), name='unique_event_speaker_entry')],
            },
        ),
    ]
