# Generated by Django 5.2.1 on 2025-08-20 15:20

import achievement.models.base
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AwardedBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=achievement.models.base.badge_image_upload_path)),
                ('achievement_type', models.CharField(choices=[('MILESTONE', 'Milestone'), ('PARTICIPATION', 'Participation'), ('PERFORMANCE', 'Performance'), ('PROJECT', 'Project'), ('EVENT', 'Event/Campaign'), ('COMMUNITY', 'Community Contribution'), ('SPECIAL', 'Special Recognition')], default='MILESTONE', max_length=50)),
                ('rarity', models.CharField(choices=[('COMMON', 'Common'), ('RARE', 'Rare'), ('LEGENDARY', 'Legendary'), ('SECRET', 'Secret')], default='COMMON', max_length=20)),
                ('is_hidden', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('criteria', models.JSONField(default=dict)),
                ('xp_reward', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BadgeAwardLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('source', models.CharField(blank=True, help_text="E.g. 'system_check', 'admin_panel', 'worksheet_signal'", max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-awarded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(unique=True)),
                ('title', models.CharField(max_length=100)),
                ('xp_required', models.PositiveIntegerField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='achievement/level_icons/')),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='UserProfileAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_xp', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='XPEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('xp', models.IntegerField(help_text='Can be positive or negative')),
                ('related_object', models.JSONField(blank=True, default=dict)),
                ('source', models.CharField(choices=[('SYSTEM', 'System-Generated'), ('MANUAL', 'Manually Assigned'), ('ACTION', 'User Action')], default='SYSTEM', max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
